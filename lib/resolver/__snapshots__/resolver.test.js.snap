// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fibonacci resolves 1`] = `
Object {
  "main": Object {
    "aliasMap": Object {},
    "id": "main",
    "ident": "main",
    "parentId": "",
    "quantifierMap": Object {},
    "selected": Array [
      Object {
        "intentions": Array [
          Object {
            "intent": "is",
            "selector": Array [
              Object {
                "ident": "fibonacci",
                "location": Object {
                  "end": Object {
                    "column": 17,
                    "line": 2,
                    "offset": 21,
                  },
                  "start": Object {
                    "column": 8,
                    "line": 2,
                    "offset": 12,
                  },
                },
                "message": Array [
                  Object {
                    "ident": 10,
                    "location": Object {
                      "end": Object {
                        "column": 20,
                        "line": 2,
                        "offset": 24,
                      },
                      "start": Object {
                        "column": 18,
                        "line": 2,
                        "offset": 22,
                      },
                    },
                    "message": null,
                    "type": "literal",
                  },
                ],
                "type": "tag",
              },
            ],
          },
          Object {
            "intent": "block",
            "selector": Array [
              "main.fibonacci",
            ],
          },
        ],
        "location": Object {
          "end": Object {
            "column": 5,
            "line": 1,
            "offset": 4,
          },
          "start": Object {
            "column": 1,
            "line": 1,
            "offset": 0,
          },
        },
      },
    ],
    "type": "tag",
  },
  "main.fibonacci": Object {
    "aliasMap": Object {
      "main.fibonacci": "value",
      "value": "main.fibonacci",
    },
    "id": "main.fibonacci",
    "ident": "fibonacci",
    "parentId": "main",
    "quantifierMap": Object {},
    "selected": Array [
      Object {
        "intentions": Array [
          Object {
            "intent": "is",
            "selector": Array [
              Object {
                "ident": "value",
                "location": Object {
                  "end": Object {
                    "column": 33,
                    "line": 4,
                    "offset": 64,
                  },
                  "start": Object {
                    "column": 28,
                    "line": 4,
                    "offset": 59,
                  },
                },
                "message": null,
                "type": "tag",
              },
            ],
          },
          Object {
            "intent": "is",
            "selector": Array [
              Object {
                "ident": "postfix",
                "message": Array [
                  Object {
                    "ident": "fibonacci",
                    "location": Object {
                      "end": Object {
                        "column": 19,
                        "line": 5,
                        "offset": 83,
                      },
                      "start": Object {
                        "column": 10,
                        "line": 5,
                        "offset": 74,
                      },
                    },
                    "message": Array [
                      Object {
                        "ident": "postfix",
                        "message": Array [
                          Object {
                            "ident": "value",
                            "location": Object {
                              "end": Object {
                                "column": 25,
                                "line": 5,
                                "offset": 89,
                              },
                              "start": Object {
                                "column": 20,
                                "line": 5,
                                "offset": 84,
                              },
                            },
                            "message": null,
                            "type": "tag",
                          },
                          Object {
                            "ident": 2,
                            "location": Object {
                              "end": Object {
                                "column": 29,
                                "line": 5,
                                "offset": 93,
                              },
                              "start": Object {
                                "column": 28,
                                "line": 5,
                                "offset": 92,
                              },
                            },
                            "message": null,
                            "type": "literal",
                          },
                          Object {
                            "ident": "-",
                            "message": null,
                            "type": "literal",
                          },
                        ],
                        "type": "bind",
                      },
                    ],
                    "type": "tag",
                  },
                  Object {
                    "ident": "fibonacci",
                    "location": Object {
                      "end": Object {
                        "column": 42,
                        "line": 5,
                        "offset": 106,
                      },
                      "start": Object {
                        "column": 33,
                        "line": 5,
                        "offset": 97,
                      },
                    },
                    "message": Array [
                      Object {
                        "ident": "postfix",
                        "message": Array [
                          Object {
                            "ident": "value",
                            "location": Object {
                              "end": Object {
                                "column": 48,
                                "line": 5,
                                "offset": 112,
                              },
                              "start": Object {
                                "column": 43,
                                "line": 5,
                                "offset": 107,
                              },
                            },
                            "message": null,
                            "type": "tag",
                          },
                          Object {
                            "ident": 1,
                            "location": Object {
                              "end": Object {
                                "column": 52,
                                "line": 5,
                                "offset": 116,
                              },
                              "start": Object {
                                "column": 51,
                                "line": 5,
                                "offset": 115,
                              },
                            },
                            "message": null,
                            "type": "literal",
                          },
                          Object {
                            "ident": "-",
                            "message": null,
                            "type": "literal",
                          },
                        ],
                        "type": "bind",
                      },
                    ],
                    "type": "tag",
                  },
                  Object {
                    "ident": "+",
                    "message": null,
                    "type": "literal",
                  },
                ],
                "type": "bind",
              },
            ],
          },
          Object {
            "intent": "after",
            "selector": Array [
              Object {
                "ident": "postfix",
                "message": Array [
                  Object {
                    "ident": "value",
                    "location": Object {
                      "end": Object {
                        "column": 20,
                        "line": 6,
                        "offset": 137,
                      },
                      "start": Object {
                        "column": 15,
                        "line": 6,
                        "offset": 132,
                      },
                    },
                    "message": null,
                    "type": "tag",
                  },
                  Object {
                    "ident": 1,
                    "location": Object {
                      "end": Object {
                        "column": 24,
                        "line": 6,
                        "offset": 141,
                      },
                      "start": Object {
                        "column": 23,
                        "line": 6,
                        "offset": 140,
                      },
                    },
                    "message": null,
                    "type": "literal",
                  },
                  Object {
                    "ident": ">",
                    "message": null,
                    "type": "literal",
                  },
                ],
                "type": "bind",
              },
            ],
          },
        ],
        "location": Object {
          "end": Object {
            "column": 16,
            "line": 4,
            "offset": 47,
          },
          "start": Object {
            "column": 7,
            "line": 4,
            "offset": 38,
          },
        },
        "temporal": true,
      },
    ],
    "type": "tag",
  },
}
`;

exports[`resolver aggregation should aggregate selector map 1`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "3": Object {
    "after": Array [],
    "before": Array [],
    "id": "3",
    "ident": "3",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "id": "A1",
        "selector": "A1.a",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.b",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "3",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
  "A1.a": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 4,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.b": Object {
    "after": Array [],
    "before": Array [
      Object {
        "id": "A1",
        "temporalIdx": 4,
        "type": "temporal",
      },
    ],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver aggregation should flat map (route) nested selectors 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver aggregation should maintain aggregated selector map 1`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver aggregation should maintain aggregated selector map 2`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver aggregation should maintain aggregated selector map 3`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "id": "A1",
        "selector": "A1.x",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.y",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.x": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.y": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver aggregation should maintain aggregated selector map 4`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "3": Object {
    "after": Array [],
    "before": Array [],
    "id": "3",
    "ident": "3",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "id": "A1",
        "selector": "A1.x",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.y",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "3",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "3",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
  "A1.x": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 5,
        "type": "temporal",
      },
      Object {
        "id": "A1",
        "temporalIdx": 6,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.y": Object {
    "after": Array [],
    "before": Array [
      Object {
        "id": "A1",
        "temporalIdx": 5,
        "type": "temporal",
      },
      Object {
        "id": "A1",
        "temporalIdx": 6,
        "type": "temporal",
      },
    ],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver alias aliased annon message selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "apply-arg",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver alias aliased anon message as temporal 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "apply-arg",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver alias aliased message selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "A1",
            "selector": "A1",
            "type": "apply-arg",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver alias aliased message to message arg 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1.X",
            "type": "tag",
          },
          Object {
            "arg": 2,
            "id": "B1.X",
            "type": "tag",
          },
          Object {
            "argCount": 2,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.X",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.X": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver alias aliased parent as intention 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver alias aliased quantified message selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "A1",
            "selector": "A1",
            "type": "apply-arg",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
    "quantifier": "?",
  },
}
`;

exports[`resolver alias aliased selector as intention 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver alias aliased selector as intention 2`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver alias selector as aliased message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1.X",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "A1.A2",
            "selector": "A1.A2",
            "type": "call-message",
          },
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.X",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.X": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver alias should extend alias across block message scope 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1.X",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "A1.A2",
            "selector": "A1.A2",
            "type": "call-message",
          },
          Object {
            "arg": 1,
            "id": "B1.X",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "A1.A3",
            "selector": "A1.A3",
            "type": "call-message",
          },
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1",
            "type": "apply-message",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.X",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.X": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver bindings should select bound selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "argCount": 0,
            "id": "A1",
            "selector": "boundFn",
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver block messages aggregate block message holders 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "id": "A2",
    "ident": "A2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A3": Object {
    "after": Array [],
    "before": Array [],
    "id": "A3",
    "ident": "A3",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "A2",
            "type": "unresolved",
          },
          Object {
            "argCount": 1,
            "id": "A1.A2",
            "selector": "A1.A2",
            "type": "call-message",
          },
          Object {
            "arg": 1,
            "id": "A3",
            "type": "unresolved",
          },
          Object {
            "argCount": 1,
            "id": "A1.A3",
            "selector": "A1.A3",
            "type": "call-message",
          },
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1",
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver block messages block message holder 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1.A2",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "A1.A2",
            "selector": "A1.A2",
            "type": "call-message",
          },
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1",
            "type": "apply-message",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver block messages not duplicate block 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver block messages temporal block message holder 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1.A2",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver compound selectors immediate > temporal > immediate 1`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "3": Object {
    "after": Array [],
    "before": Array [],
    "id": "3",
    "ident": "3",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "3",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver compound selectors immediate > temporal 1`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver compound selectors message intentions 1`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver compound selectors part intentions 1`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver compound selectors temporal > immediate > temporal 1`] = `
Object {
  "1": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "3": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 2,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "id": "3",
    "ident": "3",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "1",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "3",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver compound selectors temporal > immediate 1`] = `
Object {
  "1": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver compound selectors temporal > temporal 1`] = `
Object {
  "1": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver custom selectors should resolve dsl 1`] = `
Object {
  "X1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions block through parent intention 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1.B2",
            "selector": "A1.A2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions block through sibling selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
          Object {
            "id": "B1",
            "selector": "A1.A2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions child 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1.A2",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions deep nested intentional block 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "B1.B2",
        "selector": "B1.B2.B3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2.B3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1.B2.B3",
            "selector": "A1.A2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions no implicit intentional block 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions not self 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions parent 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.A2",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions should not resolve nested selector block 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.A2",
        "selector": "A1.A2.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A3": Object {
    "after": Array [],
    "before": Array [],
    "id": "A3",
    "ident": "A3",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "B1.B2",
        "selector": "B1.B2.B3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2.B3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1.B2.B3",
            "selector": "A3",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions should resolve nested selector block via one dot rule 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.A2",
        "selector": "A1.A2.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "B1.B2",
        "selector": "B1.B2.B3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2.B3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1.B2.B3",
            "selector": "A1.A2.A3",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions sibling 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver immediate intentions sibling selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "A1",
            "type": "tag",
          },
          Object {
            "id": "C1",
            "selector": "B1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver message handling single selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.X",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.X": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "X",
            "type": "unresolved",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "X": Object {
    "after": Array [],
    "before": Array [],
    "id": "X",
    "ident": "X",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
}
`;

exports[`resolver message handling single selector unresolved 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.X",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.X": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "Y",
            "type": "unresolved",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "hint",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "Y": Object {
    "after": Array [],
    "before": Array [],
    "id": "Y",
    "ident": "Y",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
}
`;

exports[`resolver messages aggregate message holder 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1.A2",
            "type": "tag",
          },
          Object {
            "arg": 2,
            "id": "B1.A3",
            "type": "tag",
          },
          Object {
            "argCount": 2,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.A2",
        "type": "block",
      },
      Object {
        "id": "B1",
        "selector": "B1.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver messages child message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1.A2",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver messages empty message selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver messages message holder (unresolved message) 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "id": "A2",
    "ident": "A2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "A2",
            "type": "unresolved",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver messages mismatched message selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1.B2",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "hint",
          },
        ],
      },
      Object {
        "id": "B1",
        "selector": "B1.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "B1.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver messages missing quantifier message selector hint 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "hint",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver messages nested value message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "type": "call-message",
          },
          Object {
            "argCount": 1,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver quantifiers empty message to + message selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "quantifier": "+",
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver quantifiers empty message to optional message selector 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "quantifier": "?",
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "argCount": 0,
            "id": "B1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as aggregate reference 1`] = `
Object {
  "123": Object {
    "after": Array [],
    "before": Array [],
    "id": "123",
    "ident": "123",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "456": Object {
    "after": Array [],
    "before": Array [],
    "id": "456",
    "ident": "456",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A2",
            "selector": "456",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "A1",
            "type": "tag",
          },
          Object {
            "id": "B",
            "selector": "A2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as aggregate selector 1`] = `
Object {
  "/A": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "/A",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
    "type": "regex",
  },
  "123": Object {
    "after": Array [],
    "before": Array [],
    "id": "123",
    "ident": "123",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "456": Object {
    "after": Array [],
    "before": Array [],
    "id": "456",
    "ident": "456",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "456",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as aggregate temporal reference 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "B",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as aggregate temporal reference with message 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "A2": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "B",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as aggregated temporal reference 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "A2": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "B",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as block selector 1`] = `
Object {
  "/B": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "/B",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
    "type": "regex",
  },
  "123": Object {
    "after": Array [],
    "before": Array [],
    "id": "123",
    "ident": "123",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as message reference 1`] = `
Object {
  "123": Object {
    "after": Array [],
    "before": Array [],
    "id": "123",
    "ident": "123",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "A1",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "B",
            "selector": "A1",
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as reference 1`] = `
Object {
  "123": Object {
    "after": Array [],
    "before": Array [],
    "id": "123",
    "ident": "123",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as selector 1`] = `
Object {
  "/A": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "/A",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
    "type": "regex",
  },
  "123": Object {
    "after": Array [],
    "before": Array [],
    "id": "123",
    "ident": "123",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as sibling selector 1`] = `
Object {
  "123": Object {
    "after": Array [],
    "before": Array [],
    "id": "123",
    "ident": "123",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A",
        "selector": "A.A1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A./B": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A./B",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
    "type": "regex",
  },
  "A.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A.A1",
        "selector": "A.A1.B",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A.A1.B": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A.A1.B",
            "selector": "123",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as temporal message reference 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "B",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {
      "1": Array [
        Object {
          "arg": 1,
          "id": "A1",
          "type": "tag",
        },
        Object {
          "argCount": 1,
          "id": "A1",
          "type": "call-message",
        },
        Object {
          "id": "B",
          "temporalIdx": 0,
          "type": "temporal-after",
        },
      ],
    },
  },
}
`;

exports[`resolver regex selectors as temporal reference 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "B",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors as temporal reference with message 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B",
            "selector": "B",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors should accumalate intentions 1`] = `
Object {
  "/A": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "type": "regex",
  },
  "/B": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "type": "regex",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "id": "A1",
    "ident": "A1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "id": "A2",
    "ident": "A2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "id": "B1",
    "ident": "B1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "B2": Object {
    "after": Array [],
    "before": Array [],
    "id": "B2",
    "ident": "B2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "C": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C",
            "selector": "A1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "C",
            "selector": "A2",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "C",
            "selector": "B1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "C",
            "selector": "B2",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors should accumalate selectors 1`] = `
Object {
  "/A": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "/A",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
    "type": "regex",
  },
  "/B": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "/B",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
    "type": "regex",
  },
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "AB": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "AB",
            "selector": "1",
            "type": "unresolved",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "AB",
            "selector": "2",
            "type": "unresolved",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver regex selectors should be discoverable in child-sibling-parent order 1`] = `
Object {
  "/A": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "type": "regex",
  },
  "/B": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "/B",
        "selector": "/B.B1",
        "type": "block",
      },
      Object {
        "id": "/B",
        "selector": "/B.B2",
        "type": "block",
      },
    ],
    "message": Object {},
    "type": "regex",
  },
  "/B./B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "type": "regex",
  },
  "/B./B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "type": "regex",
  },
  "/B.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "/B.B1",
        "selector": "/B.B1",
        "type": "block",
      },
      Object {
        "id": "/B.B1",
        "selector": "/B.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "/B.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "/B.B2",
        "selector": "/B.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "B",
        "selector": "/B.B1",
        "type": "block",
      },
      Object {
        "id": "B",
        "selector": "/B.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope  parent alias > child alias 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.C1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1.C1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor alias 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.C1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1.C1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.ancestor > child 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.C1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1.C1",
        "selector": "A1.B1.C1.A1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1.C1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A1.B1.C1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.ancestor > child 2`] = `
Object {
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A2",
        "selector": "A2.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2",
        "selector": "A2.B2.C2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2.C2",
        "selector": "A2.B2.C2.D2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2.D2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2.C2.D2",
        "selector": "A2.B2.C2.D2.B2",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A2.B2.C2.D2",
            "selector": "A2.B2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2.D2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.ancestor > sibling 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.C1",
        "type": "block",
      },
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1.C1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.ancestor > sibling 2`] = `
Object {
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A2",
        "selector": "A2.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2",
        "selector": "A2.B2.C2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2.C2",
        "selector": "A2.B2.C2.D2",
        "type": "block",
      },
      Object {
        "id": "A2.B2.C2",
        "selector": "A2.B2.C2.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A2.B2.C2.D2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A2.B2.C2.D2",
            "selector": "A2.B2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.parent > child 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A1.B1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.parent > child 2`] = `
Object {
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A2",
        "selector": "A2.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2",
        "selector": "A2.B2.C2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2.C2",
        "selector": "A2.B2.C2.B2",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A2.B2.C2",
            "selector": "A2.B2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.parent > sibling 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope ancestor.parent > sibling 2`] = `
Object {
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A2",
        "selector": "A2.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2",
        "selector": "A2.B2.C2",
        "type": "block",
      },
      Object {
        "id": "A2.B2",
        "selector": "A2.B2.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A2.B2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A2.B2.C2",
            "selector": "A2.B2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope child + sibling + parent regex 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
          Object {
            "id": "A1.B1",
            "selector": "A1.B1.A2",
            "type": "tag",
          },
          Object {
            "id": "A1.B1",
            "selector": "A1.A3",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child > ancestor 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.C1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1.C1",
        "selector": "A1.B1.C1.A1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1.C1",
            "selector": "A1.B1.C1.A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A1.B1.C1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child > parent 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1.B1.A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A1.B1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child > sibling 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "B1",
        "selector": "B1.A1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "B1.A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "B1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1.B1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child alias 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1.B1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child only regex 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1.B1.A2",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child regex 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1.B1",
            "type": "tag",
          },
          Object {
            "id": "A1",
            "selector": "A1.B2",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.B2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope child.child 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "A1.B1.C1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.C1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent alias 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent regex 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent.sibling > child 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "B1",
        "selector": "B1.C1",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "C1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent.sibling > child 2`] = `
Object {
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A2",
        "selector": "A2.B2",
        "type": "block",
      },
      Object {
        "id": "A2",
        "selector": "A2.C2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A2.B2",
        "selector": "A2.B2.C2",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A2.B2",
            "selector": "A2.C2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A2.B2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent.sibling > child 3`] = `
Object {
  "A3": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A3",
        "selector": "A3.B3",
        "type": "block",
      },
      Object {
        "id": "A3",
        "selector": "A3.C3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A3.B3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A3.B3",
        "selector": "A3.B3.C3",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A3.B3",
            "selector": "A3.C3",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A3.B3.C3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A3.C3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent.sibling > child 4`] = `
Object {
  "A4": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A4",
        "selector": "A4.B4",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A4.B4": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A4.B4",
        "selector": "A4.B4.C4",
        "type": "block",
      },
      Object {
        "id": "A4.B4",
        "selector": "A4.B4.D4",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A4.B4.C4": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A4.B4.C4",
        "selector": "A4.B4.C4.D4",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A4.B4.C4",
            "selector": "A4.B4.D4",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A4.B4.C4.D4": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A4.B4.D4": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope parent.sibling > child 5`] = `
Object {
  "A5": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A5",
        "selector": "A5.B5",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A5.B5": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A5.B5",
        "selector": "A5.B5.C5",
        "type": "block",
      },
      Object {
        "id": "A5.B5",
        "selector": "A5.B5.D5",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A5.B5.C5": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A5.B5.C5",
        "selector": "A5.B5.C5.D5",
        "type": "block",
      },
      Object {
        "parts": Array [
          Object {
            "id": "A5.B5.C5",
            "selector": "A5.B5.D5",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A5.B5.C5.D5": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A5.B5.D5": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling > ancestor 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.C1",
        "type": "block",
      },
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B1.C1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1.C1",
            "selector": "A1.B1.A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling > parent 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1.A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling 2`] = `
Object {
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A2",
        "selector": "A2.B2",
        "type": "block",
      },
      Object {
        "id": "A2",
        "selector": "A2.C2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A2.C2",
            "selector": "A2.B2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling 3`] = `
Object {
  "A3": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A3",
        "selector": "A3.B3",
        "type": "block",
      },
      Object {
        "id": "A3",
        "selector": "A3.C3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A3.B3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A3.B3",
            "selector": "A3.C3",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A3.C3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling alias 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling alias 2`] = `
Object {
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A2",
        "selector": "A2.B2",
        "type": "block",
      },
      Object {
        "id": "A2",
        "selector": "A2.C2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A2.B2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A2.C2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A2.C2",
            "selector": "A2.B2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling alias 3`] = `
Object {
  "A3": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A3",
        "selector": "A3.B3",
        "type": "block",
      },
      Object {
        "id": "A3",
        "selector": "A3.C3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A3.B3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A3.B3",
            "selector": "A3.C3",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
  "A3.C3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling only regex 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
      Object {
        "id": "A1",
        "selector": "A1.A3",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A3": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1.B1",
            "selector": "A1.A3",
            "type": "tag",
          },
        ],
      },
      Object {
        "id": "A1.B1",
        "selector": "A1.B1.A2",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver scope sibling regex 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "A2": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
          Object {
            "id": "B1",
            "selector": "A2",
            "type": "tag",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver should flatten message selectors 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "quantifier": "?",
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "arg": 1,
            "id": "B1",
            "type": "tag",
          },
          Object {
            "arg": 1,
            "id": "B1",
            "type": "tag",
          },
          Object {
            "argCount": 1,
            "id": "A1",
            "type": "call-message",
          },
          Object {
            "argCount": 2,
            "id": "C1",
            "selector": "A1",
            "temporalIdx": 0,
            "type": "apply-message",
          },
        ],
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver should generate frame module entry point 1`] = `
Object {
  "/D1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
    "type": "regex",
  },
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.B1",
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver temporal block after intention 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "id": "A1",
        "selector": "A1.A2",
        "temporal": true,
        "type": "block",
      },
    ],
    "message": Object {},
  },
  "A1.A2": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver temporal cyclic 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "A1",
            "selector": "B1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [
      Object {
        "id": "A1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal intention + secondary intention after message 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal intention after intention 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal intention after statement ahead of temporal 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
      Object {
        "id": "B1",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "B1",
            "type": "tag",
          },
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal intentions after statement 1`] = `
Object {
  "1": Object {
    "after": Array [],
    "before": Array [],
    "id": "1",
    "ident": "1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "2": Object {
    "after": Array [],
    "before": Array [],
    "id": "2",
    "ident": "2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "B1",
            "type": "tag",
          },
          Object {
            "id": "B1",
            "selector": "1",
            "type": "unresolved",
          },
          Object {
            "id": "B1",
            "selector": "2",
            "type": "unresolved",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal messages after aggregate message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "id": "B1",
    "ident": "B1",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "B2": Object {
    "after": Array [],
    "before": Array [],
    "id": "B2",
    "ident": "B2",
    "is": Array [],
    "message": Object {},
    "type": "unresolved",
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "C1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {
      "1": Array [
        Object {
          "arg": 1,
          "id": "B1",
          "type": "unresolved",
        },
        Object {
          "arg": 2,
          "id": "B2",
          "type": "unresolved",
        },
        Object {
          "argCount": 2,
          "id": "A1",
          "type": "call-message",
        },
        Object {
          "id": "C1",
          "temporalIdx": 0,
          "type": "temporal-after",
        },
      ],
    },
  },
}
`;

exports[`resolver temporal messages child message after message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "C1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
      Object {
        "id": "C1",
        "selector": "C1.B1",
        "type": "block",
      },
    ],
    "message": Object {
      "1": Array [
        Object {
          "arg": 1,
          "id": "C1.B1",
          "type": "tag",
        },
        Object {
          "argCount": 1,
          "id": "A1",
          "type": "call-message",
        },
        Object {
          "id": "C1",
          "temporalIdx": 0,
          "type": "temporal-after",
        },
      ],
    },
  },
  "C1.B1": Object {
    "after": Array [
      Object {
        "id": "C1",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
}
`;

exports[`resolver temporal messages intention + secondary after message 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "C1",
        "temporalIdx": 2,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "A1",
            "type": "tag",
          },
        ],
      },
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {
      "2": Array [
        Object {
          "arg": 1,
          "id": "A1",
          "type": "tag",
        },
        Object {
          "argCount": 1,
          "id": "B1",
          "type": "call-message",
        },
        Object {
          "id": "C1",
          "temporalIdx": 1,
          "type": "temporal-after",
        },
      ],
    },
  },
}
`;

exports[`resolver temporal messages intention after empty message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {
      "1": Array [
        Object {
          "argCount": 0,
          "id": "A1",
          "type": "call-message",
        },
        Object {
          "id": "B1",
          "temporalIdx": 0,
          "type": "temporal-after",
        },
      ],
    },
  },
}
`;

exports[`resolver temporal messages intention after message 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "C1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "B1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal messages secondary after message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [
      Object {
        "id": "C1",
        "temporalIdx": 1,
        "type": "temporal",
      },
      Object {
        "id": "C1",
        "temporalIdx": 2,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "C1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {
      "1": Array [
        Object {
          "arg": 1,
          "id": "B1",
          "type": "tag",
        },
        Object {
          "argCount": 1,
          "id": "A1",
          "type": "call-message",
        },
        Object {
          "id": "C1",
          "temporalIdx": 0,
          "type": "temporal-after",
        },
      ],
      "2": Array [
        Object {
          "arg": 1,
          "id": "B1",
          "type": "tag",
        },
        Object {
          "argCount": 1,
          "id": "A1",
          "type": "call-message",
        },
        Object {
          "id": "C1",
          "temporalIdx": 0,
          "type": "temporal-after",
        },
      ],
    },
  },
}
`;

exports[`resolver temporal messages sibling message after message 1`] = `
Object {
  "A1": Object {
    "after": Array [],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [
      Object {
        "id": "C1",
        "temporalIdx": 1,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "C1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "C1",
            "selector": "C1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {
      "1": Array [
        Object {
          "arg": 1,
          "id": "B1",
          "type": "tag",
        },
        Object {
          "argCount": 1,
          "id": "A1",
          "type": "call-message",
        },
        Object {
          "id": "C1",
          "temporalIdx": 0,
          "type": "temporal-after",
        },
      ],
    },
  },
}
`;

exports[`resolver temporal messages statement after message 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "B1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal should select aggregate intention selecteds 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal should select aggregate intentions 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "A1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;

exports[`resolver temporal should select before intentions 1`] = `
Object {
  "A1": Object {
    "after": Array [
      Object {
        "id": "B1",
        "temporalIdx": 0,
        "type": "temporal",
      },
    ],
    "before": Array [],
    "entryPoint": true,
    "is": Array [],
    "message": Object {},
  },
  "B1": Object {
    "after": Array [],
    "before": Array [],
    "entryPoint": true,
    "is": Array [
      Object {
        "parts": Array [
          Object {
            "id": "B1",
            "selector": "B1",
            "type": "tag",
          },
        ],
        "temporal": true,
      },
    ],
    "message": Object {},
  },
}
`;
